{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Test Template",
    "Parameters": {
        "ServiceToken": {
            "Type": "String",
            "Description": "CustomResource Lambda ARN"
        },
        "ApiDns": {
            "Type": "String",
            "Description": "Domain name where the API will be available at. e.g api.example.com."
        },
        "DnsHostedZoneId": {
            "Type": "String",
            "Description": "HostedZoneId where your custom domain name alias will be created."
        },
        "CertificateBody": {
            "Type": "String",
            "Description": "Certificate body."
        },
        "CertificateChain": {
            "Type": "String",
            "Description": "Certificate chain."
        },
        "CertificatePrivateKey": {
            "Type": "String",
            "Description": "Certificate private key.",
            "NoEcho": true
        },
        "BasePath": {
            "Type": "String",
            "Description": "Base path of the API, to be appended after the custom domain name. Can be empty.",
            "Default": ""
        },
        "StageName": {
            "Type": "String",
            "Description": "Name of the stage (existing or not) that you want the API to be deployed in."
        }
    },
    "Mappings": {
        "CloudFront": {
            "HostedZone": {
                "Id": "Z2FDTNDATAQYW2"
            }
        }
    },
    "Resources": {
        "TestRestApi" : {
            "Type" : "Custom::RestApi",
            "Properties" : {
                "ServiceToken": { "Ref": "ServiceToken" },
                "name": "Test API",
                "description": "This is a test API with a new description"
            }
        },
        "TestApiResource" : {
            "Type" : "Custom::ApiResource",
            "Properties" : {
                "ServiceToken": { "Ref": "ServiceToken" },
                "restApiId": { "Fn::GetAtt": ["TestRestApi", "id"] },
                "parentId": { "Fn::GetAtt": ["TestRestApi", "parentResourceId"] },
                "pathPart": "test-resource",
                "corsConfiguration": {
                    "allowMethods": ["GET", "POST"],
                    "allowHeaders": ["x-my-header", "some-other-header"],
                    "allowDefaultHeaders": true,
                    "allowOrigin": "www.example.com",
                    "exposeHeaders": ["some-header", "x-another-header"],
                    "maxAge": 1800,
                    "allowCredentials": true
                }
            }
        },
        "TestModel": {
            "Type": "Custom::ApiModel",
            "Properties": {
                "ServiceToken": { "Ref": "ServiceToken" },
                "restApiId": { "Fn::GetAtt": ["TestRestApi", "id"] },
                "name": "TestModel",
                "contentType": "application/json",
                "schema": {
                    "type": "object",
                    "properties": {
                        "country": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "TestModelWithParent": {
            "Type": "Custom::ApiModel",
            "Properties": {
                "ServiceToken": { "Ref": "ServiceToken" },
                "restApiId": { "Fn::GetAtt": ["TestRestApi", "id"] },
                "name": "TestModelWithParent",
                "contentType": "application/json",
                "schema": {
                    "allOf": [
                        {
                            "$ref": { "Fn::Join": ["", ["https://apigateway.amazonaws.com/restapis/", { "Fn::GetAtt": ["TestRestApi", "id"] }, "/models/", { "Fn::GetAtt": ["TestModel", "name"] }]] }
                        },
                        {
                            "type": "object",
                            "properties": {
                                "accountName": {
                                    "type": "string"
                                }
                            }
                        }
                    ]
                }
            }
        },
        "TestApiMethod1" : {
            "Type" : "Custom::ApiMethod",
            "Properties" : {
                "ServiceToken": { "Ref": "ServiceToken" },
                "restApiId": { "Fn::GetAtt": ["TestRestApi", "id"] },
                "resourceId": { "Fn::GetAtt": ["TestApiResource", "id"] },
                "method": {
                    "httpMethod": "GET",
                    "apiKeyRequired": "true",
                    "requestModels": {
                        "application/json": { "Fn::GetAtt": ["TestModel", "name"] }
                    },
                    "parameters": [
                        "querystring.sortBy",
                        "header.x-test-header",
                        "path.entityType"
                    ]
                },
                "integration": {
                    "type": "MOCK",
                    "passthroughBehavior": "NEVER",
                    "requestTemplates": {
                        "application/json": { "statusCode": 200 }
                    }
                },
                "responses": {
                    "default": {
                        "statusCode": "200",
                        "headers": {
                            "X-Custom-Header": "'hardcodedValue'"
                        }
                    },
                    ".*NotFound.*": {
                        "statusCode": "404"
                    }
                }
            }
        },
        "TestApiMethod2" : {
            "Type" : "Custom::ApiMethod",
            "Properties" : {
                "ServiceToken": { "Ref": "ServiceToken" },
                "restApiId": { "Fn::GetAtt": ["TestRestApi", "id"] },
                "resourceId": { "Fn::GetAtt": ["TestApiResource", "id"] },
                "method": {
                    "httpMethod": "POST",
                    "apiKeyRequired": "true",
                    "requestModels": {
                        "application/json": { "Fn::GetAtt": ["TestModel", "name"] }
                    },
                    "parameters": [
                        "querystring.sortBy",
                        "header.x-test-header",
                        "path.entityType"
                    ]
                },
                "integration": {
                    "type": "MOCK",
                    "passthroughBehavior": "WHEN_NO_MATCH",
                    "requestTemplates": {
                        "application/json": "{\"statusCode\": 200}"
                    }
                },
                "responses": {
                    "default": {
                        "statusCode": "200",
                        "headers": {
                            "X-Custom-Header": "'hardcodedValue'"
                        }
                    },
                    ".*NotFound.*": {
                        "statusCode": "404"
                    }
                }
            }
        },
        "TestApiMethod3" : {
            "Type" : "Custom::ApiMethod",
            "Properties" : {
                "ServiceToken": { "Ref": "ServiceToken" },
                "restApiId": { "Fn::GetAtt": ["TestRestApi", "id"] },
                "resourceId": { "Fn::GetAtt": ["TestApiResource", "id"] },
                "method": {
                    "httpMethod": "PUT",
                    "apiKeyRequired": "true",
                    "requestModels": {
                        "application/json": { "Fn::GetAtt": ["TestModel", "name"] }
                    },
                    "parameters": [
                        "querystring.sortBy",
                        "header.x-test-header",
                        "path.entityType"
                    ]
                },
                "integration": {
                    "type": "MOCK",
                    "passthroughBehavior": "WHEN_NO_TEMPLATES"
                },
                "responses": {
                    "default": {
                        "statusCode": "200",
                        "headers": {
                            "X-Custom-Header": "'hardcodedValue'"
                        }
                    },
                    ".*NotFound.*": {
                        "statusCode": "404"
                    }
                }
            }
        },
        "TestDomainName": {
            "Type": "Custom::ApiDomainName",
            "Properties": {
                "ServiceToken": { "Ref": "ServiceToken" },
                "domainName": { "Ref": "ApiDns" },
                "certificateName": "testCertificate",
                "certificateBody": { "Ref": "CertificateBody" },
                "certificateChain": { "Ref": "CertificateChain" },
                "certificatePrivateKey": { "Ref": "CertificatePrivateKey" }
            }
        },
        "TestBasePathMapping": {
            "Type": "Custom::ApiBasePathMapping",
            "Properties": {
                "ServiceToken": { "Ref": "ServiceToken" },
                "restApiId": { "Ref": "TestRestApi" },
                "domainName": { "Fn::GetAtt": ["TestDomainName", "domainName"] },
                "basePath": { "Ref": "BasePath"},
                "stage": { "Ref": "StageName" }
            },
            "DependsOn": ["TestApiMethod1", "TestApiMethod2", "TestApiMethod3"]
        },
        "TestDnsRecord": {
            "Type": "AWS::Route53::RecordSet",
            "Properties": {
                "AliasTarget": {
                    "DNSName": { "Fn::GetAtt": ["TestDomainName", "distributionDomainName"] },
                    "HostedZoneId": { "Fn::FindInMap": ["CloudFront", "HostedZone", "Id"] }
                },
                "HostedZoneId": { "Ref": "DnsHostedZoneId" },
                "Name": { "Fn::GetAtt": ["TestDomainName", "domainName"] },
                "Type": "A"
            }
        }
    },
    "Outputs": {
        "RestApiId": {
            "Value": { "Ref": "TestRestApi" }
        },
        "ApiUri": {
            "Value": { "Fn::GetAtt": ["TestDomainName", "domainName"] }
        }
    }
}
